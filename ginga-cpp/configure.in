AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(ginga, 0.11.2)

AC_LANG_CPLUSPLUS
AC_PROG_CXX([g++])
AM_PROG_LIBTOOL

CXXFLAGS="-fPIC $CXXFLAGS"
CFLAGS="-fPIC $CFLAGS"

# Bring additional directories where things might be found into our
# search path. I don't know why autoconf doesn't do this by default
for spfx in /usr/lib/ /usr/local/lib/ /usr/local/lib/ginga/; do
if test -d ${spfx}; then
LDFLAGS="-L${spfx} $LDFLAGS"
fi
done

for spfx in /usr/include/ /usr/local/include/ /usr/local/include/ginga/; do
if test -d ${spfx}; then
CPPFLAGS="-I${spfx} $CPPFLAGS"
fi
done

###########
# HEADERS #
###########

##################
# Telemidia Util #
##################
AC_CHECK_HEADER([util/Color.h], [], AC_MSG_ERROR([

Couldn't find  Telemidia Util headers.
Please install telemidia-util project.

]))

###################
# Ginga-CC Player #
###################
AC_CHECK_HEADER([player/INCLPlayer.h], [], AC_MSG_ERROR([

Couldn't find Ginga Player headers.
Please install gingacc-player project.

]))


########
# LIBS #
########

##################
# TeleMidia Util #
##################
AC_HAVE_LIBRARY(telemidiautil, , AC_ERROR([

Couldn't find telemidiautil library.
Please install Telemidia Util (telemidia-util project).

]))

############################################
# Offering a non-componentized alternative #
############################################
components=yes
AC_ARG_ENABLE(components,
  [  --enable-components build project using components [[default=yes]]],
  enable_components="$enableval", enable_components=yes)

if test x$enable_components = xno; then
   COMPONENTS_LIBS='-lginganclaavpadapter -lginganclapppadapter \
    -lginganclchapadapter -lginganclimgpadapter -lgingancllkspadapter \
    -lginganclluapadapter -lginganclnclpadapter -lginganclpavpadapter \
    -lginganclpltpadapter -lginganclsubpadapter \
    -lncl30confrancl -lncl30confraxml \
    -lncl30connclncm -lncl30consmlncm -lgingaccdataprocncl -lgingacciccurlic \
    -lgingaccsysctsdfbav -lgingaccsysctsdfbf -lgingaccsysctsfs \
    -lgingaccsysctsimgdfb -ltelemidialinks \
    -lgingacccontextmanager -lgingaccdataprocessing -lgingaccic -lgingaccmd \
    -lgingaccplayer -lgingaccsystemio -lgingaccsystemiocodemap \
    -lgingaccsystemiodfb -lgingaccsystemthread -lgingacctsparser \
    -lgingacctuner -lgingalssm -lgingancl \
    -lgingancladaptation -lgingancladapter -lginganclemconverter \
    -lginganclfocus -lginganclgfx -lginganclmd -lginganclmodel \
    -lginganclprefetch -lncl30 -lncl30converter -ltelemidiautil \
    -lgingaccplaani -lgingaccplaavp -lgingaccplacha -lgingaccplaimg \
    -lgingaccplalks -lgingaccplalua -lgingaccplapav -lgingaccplaplt \
    -lgingaccplasrt -lgingaccplatxt -lgingaccplawdg -llua \
    -lxerces-c -lxerces-depdom \
    -lcore -lxine -lfusionsound -ldirectfb -lmad -lfusion -ldirect \
    -llinceutil \
	-lgingaccp2p -lp2ptestapp -lgingaccmmi -lmultimodaltestapp \
	-lcricketbase -lcricketsessionfileshare \
	-lcricketp2pbase -lcricketp2pclient -lcricketexampleslogin \
	-lcricketsessiontunnel -lcricketxmllite -lcricketxmpp \
	-lcrickettest \
    -L/usr/local/lib/ginga/ -L/usr/local/lib -L/usr/local/lib/ginga/cm/ \
    -L/usr/local/lib/ginga/iocontents/ -L/usr/local/lib/ginga/converters/ \
    -L/usr/local/lib/ginga/adapters/ -L/usr/local/lib/ginga/ic/ \
    -L/usr/local/lib/ginga/players/ -L/usr/local/lib/ginga/dp \
    -L/usr/local/lib/lua/5.1 -L/usr/local/lib/lua/5.1/socket'
   AC_DEFINE(HAVE_COMPSUPPORT, 0, [Def to 0 if you don't have Component support.])
   AC_MSG_WARN([*** Component support will not be built.])

else
   COMPONENTS_LIBS='-ldl \
	-lgingaccp2p -lp2ptestapp -lgingaccmmi -lmultimodaltestapp \
    -lpthread -lgingaccsystemthread -llinceutil \
	-ltelemidiautil -lgingaccsystemiocodemap \
	-lgingaccsystemio -lgingaccsystemiodfb -lxerces-c \
	-lcricketbase -lcricketsessionfileshare \
	-lcricketp2pbase -lcricketp2pclient -lcricketexampleslogin \
	-lcricketsessiontunnel -lcricketxmllite -lcricketxmpp \
	-lcrickettest \
	-L/usr/local/lib/libjingle/ \
	-L/usr/local/lib/ginga/ \
	-L/usr/local/lib/'
   AC_DEFINE(HAVE_COMPSUPPORT, 1, [Def to 1 if you have Component support.])
   AC_MSG_RESULT([*** Component support will be built.])
fi

AM_CONDITIONAL(COMPONENTS, test "$enable_components" = "no")
AC_SUBST(COMPONENTS_LIBS)

AC_OUTPUT(Makefile src/Makefile)
